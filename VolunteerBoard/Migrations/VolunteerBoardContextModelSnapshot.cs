// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolunteerBoardAPI.Models;

namespace VolunteerBoardAPI.Migrations
{
    [DbContext(typeof(VolunteerBoardContext))]
    partial class VolunteerBoardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VolunteerBoardAPI.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcceptedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("PostedById")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.HasIndex("AcceptedById");

                    b.HasIndex("PostedById");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = 1,
                            CreatedOn = new DateTime(2020, 4, 22, 23, 0, 31, 843, DateTimeKind.Local).AddTicks(4158),
                            Description = "Test 1",
                            PostedById = 1,
                            Zip = "16511"
                        },
                        new
                        {
                            JobId = 2,
                            CreatedOn = new DateTime(2020, 4, 22, 23, 0, 31, 849, DateTimeKind.Local).AddTicks(991),
                            Description = "Test 2",
                            PostedById = 1,
                            Zip = "16428"
                        },
                        new
                        {
                            JobId = 3,
                            CreatedOn = new DateTime(2020, 4, 22, 23, 0, 31, 849, DateTimeKind.Local).AddTicks(1114),
                            Description = "Test 3",
                            PostedById = 1,
                            Zip = "45365"
                        });
                });

            modelBuilder.Entity("VolunteerBoardAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "plamena.mineva.scholz@gmail.com",
                            Name = "Plamena"
                        });
                });

            modelBuilder.Entity("VolunteerBoardAPI.Models.Job", b =>
                {
                    b.HasOne("VolunteerBoardAPI.Models.User", "AcceptedBy")
                        .WithMany("AcceptedJobs")
                        .HasForeignKey("AcceptedById");

                    b.HasOne("VolunteerBoardAPI.Models.User", "PostedBy")
                        .WithMany("PostedJobs")
                        .HasForeignKey("PostedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
